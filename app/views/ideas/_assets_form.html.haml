/ = form_for Upload.new, :html => { :multipart => true, :id => "fileupload"  } do |f|

/ The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload
= f.semantic_fields_for :assets, :html => { :multipart => true, :id => "fileupload"  } do |builder|
  .row.fileupload-buttonbar
    .span7
      / The fileinput-button span is used to style the file input field as button
      %span.btn.btn-success.fileinput-button
        %i.icon-plus.icon-white
        %span Add files...
        = f.file_field :data
      %button.btn.btn-primary.start{:type => "submit"}
        %i.icon-upload.icon-white
        %span Start upload
      %button.btn.btn-warning.cancel{:type => "reset"}
        %i.icon-ban-circle.icon-white
        %span Cancel upload
      %button.btn.btn-danger.delete{:type => "button"}
        %i.icon-trash.icon-white
        %span Delete
      %input.toggle{:type => "checkbox"}/
    .span5
      / The global progress bar
      .progress.progress-success.progress-striped.active.fade
        .bar{:style => "width:0%;"}
  / The loading indicator is shown during image processing
  .fileupload-loading
  %br/
  / The table listing the files available for upload/download
  %table.table.table-striped
    %tbody.files{"data-target" => "#modal-gallery", "data-toggle" => "modal-gallery"}




  / #fileupload
  -#

    = f.semantic_fields_for :assets do |builder|
      -#
        = builder.file_field :attachment, multiple: true, :label => "Загрузить файлы",  autofocus: true, :required => true, :class => "loadbtn"
      - if builder.object.new_record?
        = builder.file_field :data, multiple: true, :label => "Загрузить файлы", :class => "loadfile"
    
    = f.semantic_errors :base, class: 'inline-errors'

  :javascript
  var fileUploadErrors = {
  maxFileSize: 'File is too big',
  minFileSize: 'File is too small',
  acceptFileTypes: 'Filetype not allowed',
  maxNumberOfFiles: 'Max number of files exceeded',
  uploadedBytes: 'Uploaded bytes exceed file size',
  emptyResult: 'Empty file upload result'
  };


  %script#template-upload{:type => "text/x-tmpl"}
    :cdata
      {% for (var i=0, file; file=o.files[i]; i++) { %}
      <tr class="template-upload fade">
      <td class="preview"><span class="fade"></span></td>
      <td class="name"><span>{%=file.name%}</span></td>
      <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
      {% if (file.error) { %}
      <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
      {% } else if (o.files.valid && !i) { %}
      <td>
      <div class="progress progress-success progress-striped active"><div class="bar" style="width:0%;"></div></div>
      </td>
      <td class="start">{% if (!o.options.autoUpload) { %}
      <button class="btn btn-primary">
      <i class="icon-upload icon-white"></i>
      <span>{%=locale.fileupload.start%}</span>
      </button>
      {% } %}</td>
      {% } else { %}
      <td colspan="2"></td>
      {% } %}
      <td class="cancel">{% if (!i) { %}
      <button class="btn btn-warning">
      <i class="icon-ban-circle icon-white"></i>
      <span>{%=locale.fileupload.cancel%}</span>
      </button>
      {% } %}</td>
      </tr>
      {% } %}


  %script#template-download{:type => "text/x-tmpl"}
    :cdata
      {% for (var i=0, file; file=o.files[i]; i++) { %}
      <tr class="template-download fade">
      {% if (file.error) { %}
      <td></td>
      <td class="name"><span>{%=file.name%}</span></td>
      <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
      <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
      {% } else { %}
      <td class="preview">{% if (file.thumbnail_url) { %}
      <a href="{%=file.url%}" title="{%=file.name%}" rel="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
      {% } %}</td>
      <td class="name">
      <a href="{%=file.url%}" title="{%=file.name%}" rel="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a>
      </td>
      <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
      <td colspan="2"></td>
      {% } %}
      <td class="delete">
      <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
      <i class="icon-trash icon-white"></i>
      <span>{%=locale.fileupload.destroy%}</span>
      </button>
      <input type="checkbox" name="delete" value="1">
      </td>
      </tr>
      {% } %}


  %script{:charset => "utf-8", :type => "text/javascript"}
    :cdata
      $(function () {
      $('#fileupload').fileupload();
      \//
      \// Load existing files:
      $.getJSON($('#fileupload').prop('action'), function (files) {
      var fu = $('#fileupload').data('blueimpFileupload'),
      template;
      fu._adjustMaxNumberOfFiles(-files.length);
      console.log(files);
      template = fu._renderDownload(files)
      \.appendTo($('#fileupload .files'));
      \// Force reflow:
      fu._reflow = fu._transition && template.length &&
      template[0].offsetWidth;
      template.addClass('in');
      $('#loading').remove();
      });
      
      });



  / :coffee
  /   jQuery ->
  /     $('#fileupload').fileupload(replaceFileInput: false,
  /                                 paramName: 'idea[assets_attributes]')
  /     dataType: "script"
  /     add: (e, data) ->
  /       data.context = $(tmpl("template-upload", file))
  /       $('#fileupload').append(data.context)
  /       data.submit()
  /     progress: (e, data) ->
  /       if data.context
  /         progress = parseInt(data.loaded / data.total * 100, 10)
  /         data.context.find('.bar').css('width', progress + '%')
  / :coffee
  /   jQuery ->
  /     $('#fileupload').fileupload()
  /       dataType: "script"
  /       add: (e, data) ->
  /         types = /(\.|\/)(gif|jpe?g|png)$/i
  /         file = data.files[0]
  /         if types.test(file.type) || types.test(file.name)
  /           data.context = $(tmpl("template-upload", file))
  /           $('#fileupload').append(data.context)
  /           data.submit()
  /         else
  /           alert("#{file.name} is not a gif, jpeg, or png image file")
  /       progress: (e, data) ->
  /         if data.context
  /           progress = parseInt(data.loaded / data.total * 100, 10)
  /           data.context.find('.bar').css('width', progress + '%')